# Generated by Django 2.1.2 on 2018-11-02 15:26

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('telefone', models.CharField(blank=True, max_length=10, null=True)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('tipo', models.CharField(choices=[('c', 'cliente'), ('f', 'fornecedor')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ativo', models.BooleanField(default=True)),
                ('genero', models.CharField(choices=[('', '---'), ('M', 'masculino'), ('F', 'feminino')], default='', max_length=1)),
            ],
            options={
                'abstract': False,
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PF',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ativo', models.BooleanField(default=True)),
                ('rg', models.CharField(blank=True, max_length=20, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
            ],
            options={
                'verbose_name': 'Pessoa Física',
                'verbose_name_plural': 'Pessoas Físicas',
                'ordering': ('first_name',),
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PJ',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ativo', models.BooleanField(default=True)),
                ('company_name', models.CharField(max_length=255, verbose_name='Razão Social')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
            ],
            options={
                'verbose_name': 'Pessoa Jurídica',
                'verbose_name_plural': 'Pessoas Jurídicas',
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ativo', models.BooleanField(default=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
            ],
            options={
                'verbose_name': 'perfil',
                'verbose_name_plural': 'perfils',
                'ordering': ('first_name', 'last_name'),
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Colaborator',
            fields=[
                ('people_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.People')),
                ('codigo_profissional', models.CharField(blank=True, help_text='Código do profissional', max_length=10, null=True)),
                ('interno', models.BooleanField(default=False, help_text='O profissional é interno ou não.')),
            ],
            options={
                'abstract': False,
            },
            bases=('crm.people',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('people_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crm.People')),
                ('salario', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('ctps', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('crm.people',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('crm.cliente',),
        ),
    ]
